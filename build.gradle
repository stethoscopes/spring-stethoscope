plugins {
    id 'java'
    id 'war'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'org.dev'
version = '0.0.1'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

jar {
    enabled = false
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
//    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // lombok getter setter mapping
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.register('createProperties') {
    dependsOn 'processResources'

    doLast {
        def versionPropertiesFile = layout.buildDirectory.file("resources/main/properties/version.properties").get().asFile
        versionPropertiesFile.parentFile.mkdirs()

        def versionProperties = new Properties()
        versionProperties['project.version'] = project.version.toString()

        versionPropertiesFile.withWriter { writer ->
            versionProperties.store(writer, null)
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named("bootJar") {
    layered {
        enabled = true
    }
}